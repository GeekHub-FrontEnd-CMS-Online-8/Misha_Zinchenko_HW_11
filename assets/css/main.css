body{margin:0;padding:0;background-color:#e3e3e3}body .content{width:480px;margin:0 auto}@media screen and (min-width: 1170px){body .content{width:1170px}}body a{text-decoration:none}body li{list-style-type:none}body h2{font-family:Amsdam cyr-lat;font-size:20px;font-weight:400;text-transform:uppercase}body h6{display:none}@font-face{font-family:'Amsdam RegularSVG';src:url("Amsdam Regular.svg#Amsdam Regular") format("svg")}@font-face{font-family:'Amsdam RegularTTF';src:url("Amsdam Regular.ttf") format("truetype")}@font-face{font-family:'Amsdam RegularEOT';src:url("Amsdam Regular.eot")}/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}header{display:flex;flex-direction:row;justify-content:space-between;background:#ffffff}header img{margin-top:22px}header ul{width:579px;display:flex;flex-direction:row;justify-content:space-between}header ul li:hover{transition:0.3s;transform:scale(1.2)}header ul li:hover a{color:#757171}header a{color:#aaaaaa;font-family:Montserrat;font-size:12px;font-weight:400;line-height:50px;text-transform:uppercase}header .header__link{margin-top:12px}header .header__link a{border-right:2px solid}header .header__link img{padding-right:4px}.home{background:#ffffff}.slider_header{background:url(../img/bg_header.png) center center;background-size:cover;padding:198px 0 161px 0}.box{padding-bottom:100px}.box .slider{display:flex;justify-content:center;height:146px}@media screen and (min-width: 1100px){.box .slider{height:146px}}.box .slider-item{text-align:center;display:flex;flex-direction:column;justify-content:space-around;align-items:center;margin-top:-80px}.box .www{display:flex;flex-direction:row;justify-content:space-between;margin-top:-100px}.box .prev,.box .next{display:none}@media screen and (min-width: 1100px){.box .prev,.box .next{display:block;cursor:pointer;transition:0.75s;opacity:0.5}.box .prev:hover,.box .next:hover{opacity:1}}.box .title{color:#ffffff;font-size:36px;font-family:Amsdam cyr-lat}@media screen and (min-width: 1100px){.box .title{margin:0;padding:0;font-family:Amsdam cyr-lat;font-weight:400;line-height:200.4px;text-transform:uppercase;letter-spacing:0.89px}}.box .slogan{color:#ffffff;font-family:"Crimson Text - Roman";font-size:14px;font-weight:400;line-height:50px;letter-spacing:1.4px}.box .a{width:100%;margin-bottom:-50px}.box .b{width:100%;margin-top:-50px}.block_1-btn{padding:15px 26px;border:2px solid #f2f2f2;color:#ffffff;margin-left:43%}@media screen and (min-width: 1100px){.block_1-btn{margin-left:47%}}.block_1-btn:hover{background:rgba(255,255,255,0.5);transition-duration:1s}.about{padding:20px 0 10px 0}@media screen and (min-width: 1100px){.about{padding:70px 0 60px 0}}.about__header{height:325px;background:url(../img/bg_about.png) center center;background-size:cover}.about__content{background:#ffffff;margin-top:-5px;padding:60px 0 50px 0;text-align:center;color:#3e3d3d}.about__content p{text-align:start;padding:40px 69px 45px 75px;font-family:"Crimson Text - Roman";font-size:14px;font-weight:400;letter-spacing:1.4px}.about__content a{padding:10px 35px;border:2px solid #3e3d3d;color:#3e3d3d}.about__content a span{font-family:Montserrat;font-size:13px;font-weight:400}.about__content a:hover{transition-duration:1s;background:#3e3d3d;color:#cecece}.about__example{display:flex;flex-direction:row;justify-content:space-between;flex-wrap:wrap;margin-top:10px}.about__example .border_r{border-right:1px solid #b0b0b0}.about__example .border_rr{border-right:none}@media screen and (min-width: 1100px){.about__example{margin-top:36px}.about__example .border_rr{border-right:1px solid #b0b0b0}}.about__example__item{width:239px;text-align:center;margin-top:20px}@media screen and (min-width: 1100px){.about__example__item{width:270px}}.about__example__item p{color:#3e3d3d;font-family:Montserrat;font-size:13px;font-weight:400}.about__example__item span{color:#3e3d3d;font-family:Montserrat;font-size:45px;font-weight:400;line-height:83.99px}.services{padding:15px 0 20px 0;background:url(../img/bg_services.png) center center;background-size:cover;text-align:center}@media screen and (min-width: 1100px){.services{padding:69px 0 85px 0}}.services h2{color:#ffffff}.services p{padding-top:40px;color:#cfcfcf;font-family:"Crimson Text - Roman";font-size:14px;font-weight:400;line-height:25px;letter-spacing:1.4px}.services__skill{display:flex;flex-direction:row;justify-content:space-between;flex-wrap:wrap}.services__skill__block{width:235px}@media screen and (min-width: 1100px){.services__skill__block{width:270px}}.services__skill__block p img{padding:0 18px 0 18px}.services__skill__block .img{overflow:hidden}.services__skill__block .img:before,.services__skill__block .img:after{content:'';display:inline-block;vertical-align:middle;box-sizing:border-box;margin-top:-15px;width:100%;height:2px;background:#898989;border:2px solid #898989;border-width:0 10px}.services__skill__block .img:before{margin-left:-100%}.services__skill__block .img:after{margin-right:-100%}.services__skill__block div{position:relative;border-left:2px solid #898989;border-right:2px solid #898989;border-bottom:2px solid #898989;padding:58px 35px 44px 35px;top:-33px;color:#d8d8d8}.services__skill__block div span{font-family:Montserrat;font-size:13px;font-weight:400;line-height:18px;text-transform:uppercase;letter-spacing:1.47px}.services__skill__block div p{font-family:Crimson Text;font-size:13px;font-weight:400;line-height:20.31px;letter-spacing:1.4px}.history{padding:10px 0 10px 0;text-align:center;color:#3e3d3d}@media screen and (min-width: 1100px){.history{padding:50px 0 80px}}.history p{font-family:"Crimson Text - Roman";font-size:14px;font-weight:400;line-height:25px;letter-spacing:1.4px}.team{padding:10px 0 10px 0;text-align:center;background:url(../img/bg_team.png) center center;background-size:cover;color:#3e3d3d}@media screen and (min-width: 1100px){.team{padding:70px 0 70px}}.team p{font-family:"Crimson Text - Roman";font-size:14px;font-weight:400;line-height:25px;letter-spacing:1.4px}.team__content{display:flex;justify-content:center;align-items:center;flex-wrap:wrap;padding-left:0px;padding-right:0px;padding-top:0px}@media screen and (min-width: 1100px){.team__content{justify-content:space-between;padding-left:140px;padding-right:140px;padding-top:55px}}.team__content .img_1{background:url(../img/team_1.png) center center;background-size:cover}.team__content .img_2{background:url(../img/team_2.png) center center;background-size:cover}.team__content .img_3{background:url(../img/team_3.png) center center;background-size:cover}.team__content__block{width:271px;height:338px;margin-top:5px}.team__content__block:hover .team__content__block__text{opacity:1}.team__content__block__text{display:flex;align-items:flex-end;width:256px;height:321px;margin-top:9px;margin-left:7px;opacity:0;background:rgba(246,246,246,0.8);transition-duration:1s}.team__content__block__text .information{margin-left:19px;text-align:start;padding-bottom:39px;width:146px;color:#3e3d3d}.team__content__block__text .information p{font-family:Montserrat;font-size:13px;font-weight:600;line-height:18px;letter-spacing:1.47px}.team__content__block__text .information span{font-family:"Crimson Text";font-size:14px;font-style:italic;line-height:18px}.team__content__block__text .information hr{background:#515151;height:2px}.team__content__block__text .information__link img{padding-right:4px}.team__content__block__text .information__link a{border-right:1px solid #aaaaaa}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
